
//
// Import
//

// H5 âœ° BP

@import 'h5bp';
@import 'helpers';
@import 'print';

// Less Mixins

@import 'mixins';



//
// TABULA COMMON STYLES
//


// Centering

.center {
  margin: 0 auto;
}

.center-text {
  text-align: center;

  &.button {
    display: inline-block;
    margin-left: auto;
    margin-right: auto;
  }
}

.restrict-width {
  width: 70%;
}

.inset {
  .clearfix;
  position: relative;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3) inset;
  border-radius: 10px;
}



// Compact List Display

.compact {
  margin: 0;
  padding: 0;
  > li {
    margin: 0;
    display: block;
  }
}

.horizontal {
  .clearfix;
  > li {
    float: left;
  }
}


// Layout debugging

.debug  { box-shadow: 0 0 2px black inset; }
.debugl { box-shadow: 0 0 2px white inset; }


// Positioning

.cover  (@x:0, @y:0) { top: @x; left: @y; right: @y; bottom: @x; }

.top-left     (@z:0) { position: absolute; top    : @z; left  : @z; }
.top-right    (@z:0) { position: absolute; top    : @z; right : @z; }
.bottom-right (@z:0) { position: absolute; bottom : @z; right : @z; }
.bottom-left  (@z:0) { position: absolute; bottom : @z; left  : @z; }


// CSS Aspect Scaling

.scaler {
  position: absolute;
  overflow: hidden;
  left: -50%;
  top: -50%;
  width: 200%;
  height: 200%;

  img {
    .cover;
    position: absolute;
    margin: auto;
    min-width: 50%;
    min-height: 50%;
  }
}


// Columns

.columns {

  .border-box;

  width: 100%;
  display: table;

  .column {
    display: table-cell;
    position: relative;
    vertical-align: top;
  }

  .bottom {
    width: 100%;
    bottom: 0;
    position: absolute;
  }

  // Horizontal configuration
  &.two {
    @column_width : 46%;
    .column           { width: @column_width; }
    .column + .column { padding-left: 4%; }
  }

  &.three {
    @column_width : 31%;
    .column           { width: @column_width; }
    .column + .column { padding-left: 3%; }
  }

  // Add gutter

  &.column-style-gutter {
    .column + .column {
      padding-left: 1em;
    }
  }
}


// Split - like columns but with explicit widths

.split {

  width: 100%;
  display: table;

  > .left, > .right {
    display: table-cell;
    vertical-align: top;
  }

  &.even > .left, > .right {
    width: 50%;
  }

  &.vertical-center > .left, > .right {
    vertical-align: middle;
  }

  &.uneven {
    &.one-quarter    > .left { width: 25.0%; }
    &.one-third      > .left { width: 33.3%; }
    &.two-fifths     > .left { width: 40.0%; }
    &.two-thirds     > .left { width: 66.6%; }
    &.three-quarters > .left { width: 75.0%; }
  }
}


// Visual Split - force two rows out of data occupying the same hierarchical spot

.visual-split {

  position: relative;

  > * {
    display: block;
    margin-bottom: 0;
  }

  > * + * {
    margin-top: 0;
  }
}

